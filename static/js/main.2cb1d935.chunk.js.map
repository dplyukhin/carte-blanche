{"version":3,"sources":["serviceWorker.ts","model.ts","NoteEditor.tsx","cloud.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","State","snapshot","db","root","crumbs","mode","clipboard","selection","dirty","this","uuid","type","contents","localStorage","setItem","JSON","stringify","id","focus","length","push","pop","currentIndex","splice","indexID","currentIndexID","endsWith","note","substr","save","incomingIndex","findIndex","x","outgoingIndex","remove","lower","Math","min","upper","max","i","undefined","focusedCardID","index","insertAfter","timestamp","Date","now","serialize","value","map","n","Node","string","join","deserialize","split","line","children","text","NoteEditor","props","editor","useMemo","withHistory","withReact","createEditor","onChange","updateNote","autoFocus","onKeyDown","placeholder","style","marginTop","marginBottom","readBlob","blob","Promise","resolve","reject","reader","FileReader","onload","evt","target","result","onerror","err","readAsText","getAccessToken","cached_token","getItem","url_token","str","ret","Object","create","trim","replace","forEach","param","parts","key","shift","val","decodeURIComponent","val2","Array","isArray","parseQueryString","hash","access_token","isAuthenticated","dbx","Dropbox","fetch","accessToken","clientId","a","filesUpload","path","mute","filesDownload","fileBlob","response","parse","Cloud","upload","download","authenticationURL","getAuthenticationUrl","toString","e","render","scrollToElement","el","scrollIntoView","behavior","block","EditNote","ref","useRef","current","className","MarkdownRenderers","math","inlineMath","code","language","docco","ViewNote","isFocused","isSelected","useEffect","setTimeout","source","card","plugins","RemarkMathPlugin","RemarkHighlightPlugin","renderers","RenderCard","CardPreview","words","preview","slice","Editor","cards","focusedID","outgoing","incoming","href","keymap","boundKeys","keys","App","keyName","handleKey","event","preventDefault","exit","newNote","paste","enter","removeSelection","copy","goUp","goDown","interpretKeypress","Error","ReactDOM","StrictMode","document","getElementById","setInterval","cloudSnapshot","localSnapshot","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2cb1d935.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuid } from 'uuid';\n\nexport type ID = string\nexport type Card = Note | Index\n\nexport type Note = {\n    type: \"note\",\n    contents: string\n}\n\nexport type Index = {\n    type: \"index\",\n    contents: ID[]\n}\n\ntype Database = { [key: string]: Card }\n\ntype Breadcrumbs = [ID, number][]\n\nexport type Keypress \n    = 'enter' | 'escape' | 'space' | 'shift+space' | 'backspace'\n    | 'left' | 'right' | 'up' | 'down' \n    | 'copy' | 'paste' | 'cut' | 'undo' | 'redo'\n    | 'shift+down' | 'shift+up'\n\nexport function interpretKeypress(key: Keypress, state: State) {\n    if (state.mode === 'viewing') {\n        if (key === 'enter' && state.focus >= 0) {\n            state.mode = 'editing'\n        }\n        else if (key === 'escape') {\n            state.exit()\n        }\n        else if (key === 'space') {\n            const note = state.newNote()\n            state.insertAfter(state.focus, note)\n            state.focus = state.focus + 1\n            state.mode = 'editing'\n        }\n        else if (key === 'paste') {\n            state.paste()\n        }\n        else if (key === 'right' && state.focus >= 0) {\n            const note = state.currentIndex.contents[state.focus]\n            state.enter(note + '-outgoing')\n        }\n        else if (key === 'left' && state.focus >= 0) {\n            const note = state.currentIndex.contents[state.focus]\n            state.enter(note + '-incoming')\n        }\n    }\n    if (state.mode === 'viewing' || state.mode === 'selecting') {\n        if (key === 'backspace' && state.focus >= 0) {\n            state.removeSelection()\n        }\n        else if (key === 'copy' && state.focus >= 0) {\n            state.copy()\n            state.mode = 'viewing'\n            state.selection = undefined\n        }\n        else if (key === 'cut' && state.focus >= 0) {\n            state.copy()\n            state.removeSelection()\n        }\n        else if (key === 'escape') {\n            state.mode = 'viewing'\n            state.selection = undefined\n        }\n        else if (key === 'up') {\n            state.goUp()\n        }\n        else if (key === 'down') {\n            state.goDown()\n        }\n        else if (key === 'shift+down' && state.focus >= 0) {\n            state.mode = 'selecting'\n            if (state.selection === undefined) {\n                state.selection = state.focus\n            }\n            state.goDown()\n        }\n        else if (key === 'shift+up') {\n            state.mode = 'selecting'\n            if (state.selection === undefined) {\n                state.selection = state.focus\n            }\n            state.goUp()\n        }\n    }\n    if (state.mode === 'editing') {\n        if (key === 'escape') {\n            state.mode = 'viewing'\n        }\n    }\n}\n\nexport const DB_STRING = 'database';\n\nexport type Snapshot = {\n    db: Database,\n    root: ID,\n    timestamp: number\n}\n\nexport class State {\n    // Persistent state\n    db: Database\n    root: ID\n\n    // Temporary state\n    crumbs: Breadcrumbs\n    mode: 'viewing' | 'editing' | 'selecting'\n    clipboard: ID[]\n    selection?: number\n    dirty: boolean\n\n    constructor(snapshot: Snapshot | null) {\n        if (snapshot === null) {\n            this.root = uuid()\n            this.db = {}\n            this.db[this.root] = { type: 'index', contents: [] }\n        }\n        else {\n            this.root = snapshot.root\n            this.db = snapshot.db\n        }\n        this.crumbs = [[this.root, -1]]\n        this.mode = 'viewing'\n        this.clipboard = []\n        this.dirty = false\n\n    }\n\n    get snapshot(): Snapshot {\n        return {\n            db: this.db,\n            root: this.root,\n            timestamp: Date.now()\n        }\n    }\n\n    save() {\n        localStorage.setItem(DB_STRING, JSON.stringify(this.snapshot))\n        console.log(\"Saved change to local storage\")\n        this.dirty = true\n    }\n\n    get focus(): number {\n        return this.crumbs[this.crumbs.length - 1][1]\n    }\n    set focus(focus: number) {\n        this.crumbs[this.crumbs.length - 1][1] = focus\n    }\n    get currentIndexID(): ID {\n        return this.crumbs[this.crumbs.length - 1][0]\n    }\n    get currentIndex(): Index {\n        return this.db[this.currentIndexID] as Index\n    }\n    get focusedCardID(): ID | undefined {\n        // This is undefined when the focus is -1\n        return this.currentIndex.contents[this.focus]\n    }\n    get focusedCard(): Card | undefined {\n        // This is undefined when the focus is -1\n        return this.focusedCardID ? this.db[this.focusedCardID] : undefined\n    }\n\n    // NAVIGATION\n\n    enter(id: ID) {\n        let focus\n        if (this.db[id].contents.length > 0) {\n            focus = 0\n        }\n        else {\n            focus = -1\n        }\n        this.crumbs.push([id, focus])\n    }\n    exit() {\n        if (this.crumbs.length > 1) {\n            this.crumbs.pop()\n        }\n    }\n    goUp() {\n        // The behavior in 'selecting' mode and 'viewing' mode is\n        // slightly different: when selecting, you cannot move the\n        // focus any higher than 0.\n        if (this.mode === 'viewing') {\n            if (this.focus > -1) {\n                this.focus = this.focus - 1\n            }\n        }\n        if (this.mode === 'selecting') {\n            if (this.focus > 0) {\n                this.focus = this.focus - 1\n            }\n        }\n    }\n    goDown() {\n        if (this.focus < this.currentIndex.contents.length - 1) {\n            this.focus = this.focus + 1\n        }\n    }\n\n    // MUTATION\n\n    insertAfter(focus: number, id: ID) {\n        this.currentIndex.contents.splice(focus + 1, 0, id)\n\n        // If this note is added to the outgoing links of another\n        // note, then add the latter to the *incoming* links of the former.\n        const indexID = this.currentIndexID;\n        if (indexID.endsWith(\"-outgoing\")) {\n            const note : ID = indexID.substr(0, indexID.length - 9)\n            const incomingIndex = this.db[id + \"-incoming\"] as Index\n            incomingIndex.contents.push(note)\n        }\n        if (indexID.endsWith(\"-incoming\")) {\n            const note : ID = indexID.substr(0, indexID.length - 9)\n            const outgoingIndex = this.db[id + \"-outgoing\"] as Index\n            outgoingIndex.contents.push(note)\n        }\n        this.save()\n    }\n    remove(focus: number) {\n        const id = this.currentIndex.contents[focus]\n        this.currentIndex.contents.splice(focus, 1)\n        // Update the focus if it's now out of bounds\n        if (this.focus > this.currentIndex.contents.length - 1) {\n            this.focus = this.focus - 1\n        }\n\n        // If this note was deleted from the outgoing links of\n        // another note, then we should also remove that note\n        // from the incoming links of this note.\n        const indexID = this.currentIndexID;\n        if (indexID.endsWith(\"-outgoing\")) {\n            const note : ID = indexID.substr(0, indexID.length - 9)\n            const incomingIndex = this.db[id + \"-incoming\"] as Index\n            const focus = incomingIndex.contents.findIndex(x => x === note)\n            incomingIndex.contents.splice(focus, 1)\n        }\n        if (indexID.endsWith(\"-incoming\")) {\n            const note : ID = indexID.substr(0, indexID.length - 9)\n            const outgoingIndex = this.db[id + \"-outgoing\"] as Index\n            const focus = outgoingIndex.contents.findIndex(x => x === note)\n            outgoingIndex.contents.splice(focus, 1)\n        }\n        this.save()\n    }\n    newNote(): ID {\n        const id = uuid()\n        this.db[id] = {type: 'note', contents: \"\"}\n        this.db[id + \"-incoming\"] = {type: 'index', contents: []}\n        this.db[id + \"-outgoing\"] = {type: 'index', contents: []}\n        this.save()\n        return id\n    }\n    newIndex(): ID {\n        const id = uuid()\n        this.db[id] = {type: 'index', contents: []}\n        this.save()\n        return id\n    }\n    removeSelection() {\n        if (this.mode === 'viewing') {\n            this.remove(this.focus)\n        }\n        else if (this.mode === 'selecting') {\n            const lower = Math.min(this.focus, this.selection!)\n            const upper = Math.max(this.focus, this.selection!)\n            for (let i = lower; i <= upper; i++) {\n                // Delete the lowest index, and the next note\n                // to delete will be moved to that element. \n                this.remove(lower);\n            }\n            this.mode = 'viewing'\n            this.selection = undefined\n            this.focus = lower\n        }\n        // Update the focus if it's now out of bounds\n        if (this.focus > this.currentIndex.contents.length - 1) {\n            this.focus = this.focus - 1\n        }\n    }\n    copy() {\n        if (this.mode === 'viewing') {\n            this.clipboard = [this.focusedCardID!]\n        }\n        else if (this.mode === 'selecting') {\n            const index = this.currentIndex\n            const lower = Math.min(this.focus, this.selection!)\n            const upper = Math.max(this.focus, this.selection!)\n            this.clipboard = []\n            for (let i = lower; i <= upper; i++) {\n                this.clipboard.push(index.contents[i])\n            }\n        }\n    }\n    paste() {\n        for (let i = 0; i < this.clipboard.length; i++) {\n            this.insertAfter(this.focus + i, this.clipboard[i])\n        }\n    }\n}","import React, { useMemo } from 'react'\nimport { createEditor, Node } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { withHistory } from 'slate-history'\nimport { Note, ID } from './model'\n\ntype Props = { \n  note: Note, \n  id: ID, \n  updateNote: (id : ID, contents : string) => void,\n  onKeyDown: (e: React.KeyboardEvent) => void\n}\nconst NoteEditor = (props: Props) => {\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n\n  function onChange(value: Node[]) {\n    props.updateNote(props.id, serialize(value))\n  }\n\n  return (\n    <Slate editor={editor} value={deserialize(props.note.contents)} onChange={onChange}>\n      <Editable autoFocus \n        onKeyDown={props.onKeyDown} \n        placeholder=\"Enter some text...\" \n        style={{marginTop: '14px', marginBottom: '14px'}}\n      />\n    </Slate>\n  )\n}\n\n// Define a serializing function that takes a value and returns a string.\nconst serialize = (value: Node[]) => {\n  return (\n    value\n      // Return the string content of each paragraph in the value's children.\n      .map(n => Node.string(n))\n      // Join them all with line breaks denoting paragraphs.\n      .join('\\n')\n  )\n}\n\n// Define a deserializing function that takes a string and returns a value.\nconst deserialize = (string: any): Node[] => {\n  // Return a value array of children derived by splitting the string.\n  return string.split('\\n').map((line: string) => {\n    return {\n      children: [{ text: line }],\n    }\n  })\n}\n\nexport default NoteEditor","import fetch from \"isomorphic-fetch\";\nimport { Dropbox } from \"dropbox\";\nimport { State, Snapshot } from \"./model\";\n\n/**\n * This code is based on the dropbox API examples:\n * https://github.com/dropbox/dropbox-sdk-js/blob/master/examples/javascript/auth/index.html\n */\n\nconst DROPBOX_APP_KEY = \"31ybvx3rsag1cih\";\nconst CLOUD_PATH = \"/database.json\";\nconst ACCESS_TOKEN_COOKIE = \"dropbox_access_token\"\n\n// SOURCE: https://github.com/dropbox/dropbox-sdk-js/blob/master/examples/javascript/utils.js\nfunction parseQueryString(str: string) {\n  var ret = Object.create(null);\n\n  if (typeof str !== \"string\") {\n    return ret;\n  }\n\n  str = str.trim().replace(/^(\\?|#|&)/, \"\");\n\n  if (!str) {\n    return ret;\n  }\n\n  str.split(\"&\").forEach(function (param) {\n    var parts = param.replace(/\\+/g, \" \").split(\"=\");\n    // Firefox (pre 40) decodes `%3D` to `=`\n    // https://github.com/sindresorhus/query-string/pull/37\n    var key = parts.shift();\n    var val = parts.length > 0 ? parts.join(\"=\") : undefined;\n\n    key = decodeURIComponent(key!);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    var val2 = val === undefined ? null : decodeURIComponent(val);\n\n    if (ret[key] === undefined) {\n      ret[key] = val2;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val2);\n    } else {\n      ret[key] = [ret[key], val2];\n    }\n  });\n\n  return ret;\n}\n\nfunction readBlob(blob: Blob): Promise<string | ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = function (evt) {\n        if (evt && evt.target && evt.target.result) {\n          resolve(evt.target.result);\n        } else {\n          reject(\n            \"Blob had an unexpected format: blob.target.result is undefined\\n\" +\n              evt\n          );\n        }\n      };\n      reader.onerror = function (err) {\n        reject(err);\n      };\n      reader.readAsText(blob);\n    });\n  }\n\n// Fetch the access token from local storage, or else check if\n// it is in the URL as a result of OAuth\nfunction getAccessToken() {\n  const cached_token = localStorage.getItem(ACCESS_TOKEN_COOKIE)\n  if (cached_token !== null) {\n    return cached_token;\n  }\n\n  const url_token = parseQueryString(window.location.hash).access_token\n  if (url_token) {\n    localStorage.setItem(ACCESS_TOKEN_COOKIE, url_token)\n  }\n  return url_token\n}\n\nexport function isAuthenticated() {\n  return !!getAccessToken();\n}\n\nconst dbx = isAuthenticated() \n    ? new Dropbox({ fetch, accessToken: getAccessToken() })\n    : new Dropbox({ fetch, clientId: DROPBOX_APP_KEY });\n\nasync function upload(state: State): Promise<void> {\n    try {\n        state.dirty = false;\n        const result = await dbx.filesUpload({\n            contents: JSON.stringify(state.snapshot),\n            path: CLOUD_PATH,\n            mode: { \".tag\": \"overwrite\" },\n            mute: true,\n        })\n        console.log(\"Upload successful\");\n        console.log(result);\n    }\n    catch (e) {\n        console.error(\"Upload failed!\");\n        console.error(e);\n        state.dirty = true;\n    }\n}\n\nasync function download(): Promise<Snapshot | null> {\n    try {\n        const result   = await dbx.filesDownload({ path: CLOUD_PATH }) as any;\n        const response = await readBlob(result.fileBlob) as string\n        const snapshot = JSON.parse(response) as Snapshot;\n        return snapshot;\n    } catch (err) {\n        console.error(\"Error fetching data from cloud:\");\n        console.error(err);\n        return null;\n    }\n}\n\nexport type AuthenticatedCloud = {\n    isAuthenticated: true,\n    upload: (state: State) => Promise<void>,\n    download: () => Promise<Snapshot | null>\n}\n\nexport type UnauthenticatedCloud = {\n    isAuthenticated: false,\n    authenticationURL: string\n}\n\nexport type Cloud = AuthenticatedCloud | UnauthenticatedCloud\n\nconst Cloud: Cloud = isAuthenticated() ? \n    {\n        isAuthenticated: true,\n        upload, download\n    }\n    :\n    {\n        isAuthenticated: false,\n        authenticationURL: dbx.getAuthenticationUrl(window.location.toString())\n    }\n\nexport default Cloud\n\n\n","import React, { useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactMarkdown from 'react-markdown';\nimport RemarkMathPlugin from 'remark-math';\nimport RemarkHighlightPlugin from 'remark-highlight.js';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { BlockMath, InlineMath } from 'react-katex';\nimport Hotkeys from 'react-hot-keys';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { State, interpretKeypress, Card, Keypress, ID, Index, Note, Snapshot, DB_STRING } from './model';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport 'katex/dist/katex.min.css';\nimport NoteEditor from './NoteEditor';\nimport Dropbox, { AuthenticatedCloud } from './cloud';\n\n\nimport remark from 'remark';\nimport strip from 'strip-markdown';\n\n/**\n * Given some markdown text, return a version of that text minus formatting.\n * @param text \n */\nasync function removeFormatting(text: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    remark()\n      .use(strip)\n      .process(text, function (err, file) {\n        if (err) reject(err);\n        else resolve(String(file));\n      })\n  });\n}\n\n\ntype CardProps = { card: Card, id: ID, state: State, isFocused: boolean, isSelected: boolean }\ntype PreviewProps = { card: Card, id: ID, state: State }\n\nfunction onKeyDown(e: React.KeyboardEvent) {\n  if (state) {\n    if (e.key === 'Escape') {\n      state.mode = 'viewing'\n      state.save()\n      render()\n    }\n  }\n}\n\nfunction scrollToElement(el : HTMLElement) {\n  el.scrollIntoView({behavior: \"smooth\", block: \"center\"})\n}\n\nfunction EditNote(\n  props: { note: Note, id: ID }\n): JSX.Element {\n\n  const {note, id} = props\n  const ref: React.MutableRefObject<HTMLTextAreaElement | null> = useRef(null)\n\n  if (ref.current)\n    scrollToElement(ref.current)\n\n  return (\n    <div className=\"card-panel z-depth-3 edited-note\">\n      <NoteEditor note={note} id={id} updateNote={updateNote} onKeyDown={onKeyDown} />\n    </div>\n  )\n}\n\nconst MarkdownRenderers: ReactMarkdown.Renderers = {\n  math: ({value}) => <BlockMath>{value}</BlockMath>,\n  inlineMath: ({ value }) => <InlineMath>{value}</InlineMath>,\n  code: ({language, value}) => <SyntaxHighlighter language={language} style={docco}>{value}</SyntaxHighlighter>\n}\n\nfunction ViewNote(\n  props: { card: Note, id: ID, state: State, isFocused: boolean, isSelected: boolean }\n): JSX.Element {\n\n  const ifFocused = props.isFocused ? \"z-depth-3\" : \"\";\n  const ifSelected = props.isSelected ? \"blue lighten-5\" : \"\";\n  const className = [\"card-panel\", ifFocused, ifSelected].join(\" \");\n\n  const ref: React.MutableRefObject<HTMLDivElement | null> = useRef(null)\n\n  useEffect( () => {\n    if (ref.current && props.isFocused) {\n      console.log(\"Scrolling to\", props.id)\n      setTimeout(() => {\n        scrollToElement(ref.current!)\n      }, 20)\n    }\n  })\n\n  return (\n    <div className={className} ref={ref}>\n      <ReactMarkdown \n        source={props.card.contents}\n        plugins={[RemarkMathPlugin, RemarkHighlightPlugin]}\n        renderers={MarkdownRenderers as any}\n      />\n    </div>\n  )\n}\n\nfunction RenderCard(props: CardProps): JSX.Element {\n  const {card, id, state, isFocused} = props;\n\n  if (card.type === 'index') {\n    return (\n      <div>\n        {`Index: (${card.contents.length} cards)`}\n      </div>\n    )\n  }\n  else {\n\n    if (isFocused && state.mode === 'editing') {\n      return (\n        <EditNote note={card} id={id} />\n      )\n    }\n    else {\n      return (\n        <ViewNote {...props} card={card} />\n      )\n    }\n  }\n}\n\nfunction CardPreview({card, id, state}: PreviewProps): JSX.Element {\n  if (card.type === 'index') {\n    return (\n      <div className=\"card-panel truncate\">\n        {`Index: (${card.contents.length} cards)`}\n      </div>\n    )\n  }\n  else {\n    const words = card.contents.split(\" \");\n    const preview = words.length > 20 \n      ? words.slice(0,20).join(\" \") + \"...\" \n      : card.contents;\n\n    return (\n      <div className=\"card-panel\">\n        <ReactMarkdown \n          source={preview}\n          plugins={[RemarkMathPlugin, RemarkHighlightPlugin]}\n          renderers={MarkdownRenderers as any}\n        />\n      </div>\n    )\n  }\n}\n\nfunction Editor({state}: {state: State | null}): JSX.Element {\n\n  if (state === null) {\n    return (\n      <div className=\"row\">\n        <div className=\"col s3 offset-s4\">\n          <div className=\"card-panel valign-wrapper\">\n            <b className=\"center-align\">Loading...</b>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const cards = state.currentIndex.contents\n  const focusedID = cards[state.focus]\n  const outgoing = state.db[focusedID + \"-outgoing\"] as Index | undefined\n  const incoming = state.db[focusedID + \"-incoming\"] as Index | undefined\n\n  return (\n    <div className=\"row\">\n      <div className=\"pinned col l3 offset-l1 m3 hide-on-small-only\">\n        {incoming && incoming.contents.map(function (id: ID, i: number) {\n            return <CardPreview key={i} card={state.db[id]} id={id} state={state} />\n        })}\n      </div>\n      <div className=\"col l4 offset-l4 m6 offset-m3 s10 offset-s1\" style={{marginBottom: \"20em\"}}> \n        {\n          Dropbox.isAuthenticated ||\n          <div className=\"card-panel\">\n            <a href={Dropbox.authenticationURL}>Sign in to Dropbox</a>\n          </div>  \n        }\n        {cards.map(function (id: ID, i: number) {\n            const card = state.db[id]\n            const isFocused = state.focus === i\n            const isSelected = state.mode === 'selecting' &&\n              ((state.focus <= i && i <= state.selection!) ||\n              (state.focus >= i && i >= state.selection!))\n\n\n            return <RenderCard id={id} card={card} key={i} state={state} isFocused={isFocused} isSelected={isSelected} />\n        })}\n      </div>\n      <div className=\"pinned col l3 offset-l8 m3 offset-m9 hide-on-small-only\">\n        {outgoing && outgoing.contents.map(function (id: ID, i: number) {\n            return <CardPreview key={i} card={state.db[id]} id={id} state={state} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst keymap : { [key: string] : Keypress} = {\n  'Enter': 'enter',\n  'command+c': 'copy',\n  'command+x': 'cut',\n  'command+v': 'paste',\n  'command+z': 'undo',\n  'command+shift+z': 'redo',\n  'Space': 'space',\n  'right': 'right',\n  'left': 'left',\n  'up': 'up',\n  'down': 'down',\n  'Escape': 'escape',\n  'Backspace': 'backspace',\n  'shift+down': 'shift+down',\n  'shift+up': 'shift+up',\n  // VIM keybindings\n  'j': 'down',\n  'k': 'up',\n  'h': 'left',\n  'l': 'right',\n  'u': 'undo',\n  'ctrl+r': 'redo',\n  'y': 'copy',\n  'p': 'paste',\n  'x': 'cut',\n  'd': 'backspace',\n  'i': 'enter',\n  'a': 'space'\n}\n\nconst boundKeys = Object.keys(keymap).join(\",\")\n\nfunction App() {\n  return (\n    <Hotkeys\n      keyName={boundKeys}\n      onKeyDown={handleKey}\n    >\n      <Editor state={state}/>\n    </Hotkeys>\n  );\n}\n\n\n\nlet state : State | null = null;\n\n// Periodically upload state to Dropbox\n\nif (Dropbox.isAuthenticated) {\n  setInterval(() => {\n    if (state !== null && state.dirty)\n      (Dropbox as AuthenticatedCloud).upload(state)\n  }, 10000)\n}\n\n\n// Initialize state, checking Dropbox and localStorage\n\n(async function () {\n  const cloudSnapshot = Dropbox.isAuthenticated ? await Dropbox.download() : null\n  cloudSnapshot && console.log(\"Got cloud snapshot:\", cloudSnapshot)\n\n  const text = localStorage.getItem(DB_STRING)\n  const localSnapshot = text ? JSON.parse(text) as Snapshot : null\n  console.log(\"Got snapshot from localstorage:\", localSnapshot)\n\n  // No previous work found... Start in the initial state.\n  if (localSnapshot === null && cloudSnapshot === null) {\n    state = new State(null);\n  }\n  // Cloud backup found, with no local save. Must be logging in on a new browser or cleared the cache.\n  else if (localSnapshot === null && cloudSnapshot !== null) {\n    state = new State(cloudSnapshot);\n  }\n  // If a local copy is found with no cloud backup, then load that local state.\n  else if (localSnapshot !== null && cloudSnapshot === null) {\n    state = new State(localSnapshot);\n  }\n  // At this point we know that both a local snapshot and a cloud snapshot exist.\n  // Load whichever one has the more recent time stamp.\n  else {\n    state = (localSnapshot!.timestamp < cloudSnapshot!.timestamp) \n      ? new State(cloudSnapshot) \n      : new State(localSnapshot);\n  }\n\n  render();\n\n})()\n\n\nfunction handleKey(key: string, event: any) {\n  if (state) {\n    // Prevent the default refresh event under WINDOWS system\n    event.preventDefault() \n    console.log(keymap[key]) \n    interpretKeypress(keymap[key], state);\n    console.log(state)\n    render()\n  }\n}; \n\nfunction updateNote(id : ID, contents : string) {\n  if (state) {\n    const note = state.db[id]\n    if (note.type === 'note') {\n      note.contents = contents\n      render()\n    }\n    else {\n      throw Error(`Cannot update card ${id}: not a note`)\n    }\n  }\n}\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\n\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}